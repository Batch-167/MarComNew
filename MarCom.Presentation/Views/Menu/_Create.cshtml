@model MarCom.ViewModel.MenuViewModel
@using MarCom.Repository

@{
    string code = MenuRepo.GetNewCode();
}

@using (Html.BeginForm("Create", "Menu", FormMethod.Post, new { @id = "input-form", name = ("Data Saved! New menu has been add with code "+@code.ToString())})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => code, new { htmlAttributes = new { @class = "form-control", @readonly="ReadOnly" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Controller, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Parent_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Parent_Id, (IEnumerable<SelectListItem>)
               ViewBag.Menu, "Select Menu Name", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Parent_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
