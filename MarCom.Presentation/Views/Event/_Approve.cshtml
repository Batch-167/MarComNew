@model MarCom.ViewModel.EventApproveViewModel

@using (Html.BeginForm("Approve", "EventRequest", FormMethod.Post, new { @id = "input-form" }))
{
    @Html.AntiForgeryToken()   
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <table class="col-lg-12">
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Request_By, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Request_By, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Request_By, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Event_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Event_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Event_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Request_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Request_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Request_Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @rows = "5", @cols="30", @class = "form-control", @readonly= "readonly" } })
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Start_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.End_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Assign_To, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Assign_To, (IEnumerable<SelectListItem>)ViewBag.Employee, "Select Employee", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Assign_To, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Approve" class="btn btn-primary" />
                <input type="submit" value="Reject" class="btn btn-danger" />
                <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
            </div>
        </div>
    </div>
}

