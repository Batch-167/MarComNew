@model MarCom.ViewModel.MenuAccessViewModel

@using (Html.BeginForm("Edit", "MenuAccess", FormMethod.Post, new { @id = "input-form", @name = "Menu Access" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.M_Role_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.M_Role_Id, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.M_Role_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.M_Menu_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.ListMenu)
               {
                   <br><input type="checkbox" name="menu" value="@item.Value"/>@item.Text
               }

                @Html.ValidationMessageFor(model => model.M_Menu_Id, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-4 col-md-offset-8">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="button" value="Cancel" class="btn btn-default" data-dissmiss="modal"/>
            </div>
        </div>
    </div>
}
