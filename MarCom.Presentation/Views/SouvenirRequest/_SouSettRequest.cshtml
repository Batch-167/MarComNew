@model MarCom.ViewModel.SouvenirRequestViewModel


<div class="panel panel-primary">
    <div class="panel-body">
        @using (Html.BeginForm("SouSettRequest", "SouvenirRequest", FormMethod.Post, new { @id = "input-form" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="form-horizontal">
                @Html.HiddenFor(model => model.Id, new { @Id = "Id" })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CodeEvent, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.HiddenFor(model => model.T_Event_Id)
                        @Html.EditorFor(model => model.CodeEvent, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CodeEvent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.HiddenFor(model => model.Request_By)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Request_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Request_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Request_Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Request_Due_Date, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Request_Due_Date, new { htmlAttributes = new { @class = "form-control", @type="date", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Request_Due_Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-4">
                        @Html.HiddenFor(model => model.Status)
                        @Html.EditorFor(model => model.StatusName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="panel panel-primary">
                    <div class="panel-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="col-lg-4">
                                        <span>Souvenir Name</span>
                                    </th>
                                    <th class="col-lg-2">
                                        <span>Qty</span>
                                    </th>
                                    <th class="col-lg-2">
                                        <span>Qty Actual</span>
                                    </th>
                                    <th class="col-lg-4">
                                        <span>Note</span>
                                    </th>
                                    <th class="col-lg-2">
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="QtyActual"></tbody>
                        </table>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Settlement" class="btn btn-primary" data-toggle="modal" data-target="#settlement" />
                        <input type="button" value="Cancel" class="btn btn-warning" data-dismiss="modal" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="settlement">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header bg-green">
                <span class="midtext text-bold text-black">&nbsp;Submit Settlement ?</span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="button" value="Settled" class="btn btn-danger" onclick="SettlementReq(4)"/>
                    <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                </div>
            </div>
        </div>
    </div>
</div>
