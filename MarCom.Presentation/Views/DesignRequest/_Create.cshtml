@model MarCom.ViewModel.DesignRequestViewModel
@using MarCom.Repository
<h4>Add Desgn Request</h4>
<hr />
@{
    string code = DesignRequestRepo.GetNewCode();
}

@using (Html.BeginForm("Create", "DesignRequest", FormMethod.Post, new { @id = "input-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => code, new { htmlAttributes = new { @class = "form-control" , @readonly="ReadOnly"} })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.T_Event_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList(model => model.T_Event_Id, (IEnumerable<SelectListItem>)ViewBag.DesignRequest, "Select Event", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.T_Event_Id, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Title_Header, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title_Header, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title_Header, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Request_By, htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Request_By, new { htmlAttributes = new { @class = "form-control", @readonly = "ReadOnly" } })
                @Html.ValidationMessageFor(model => model.Request_By, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Request_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Request_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "ReadOnly" } })
                @Html.ValidationMessageFor(model => model.Request_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="button" value="Cancel" class="btn btn-warning" data-dismiss="modal" />
            </div>
        </div>
    </div>
}

