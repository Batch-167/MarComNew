@model IEnumerable<MarCom.ViewModel.DesignRequestViewModel>
@{
    int row = 0;
}

<table class="table">
    <thead>
        <tr>
            <th>No</th>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Request_By)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Request_Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Assign_To)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Create_Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Create_By)
            </th>
            <th>Action</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @(row += 1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Request_By)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Request_Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Assign_To)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                    @*@{
                        switch (item.Status)
                        {
                            case 0:
                                <p>Rejected</p>
                                break;
                            case 1:
                                <p>Submited</p>
                                break;
                            case 2:
                                <p>In Progress</p>
                                break;
                            case 3:
                                <p>Done</p>
                            default:
                                break;
                        }
                    }*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Create_Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Create_By)
                </td>
                <td>
                    <button type="button" class="btn btn-default btn-view" data-id="@item.Id" title="View" onclick="action('view', @item.Id)">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </button>
                    <button type="button" class="btn btn-warning btn-edit" data-id="@item.Id" title="Edit" onclick="action('edit', @item.Id)">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                    </button>
                    <button type="button" class="btn btn-danger btn-approve" data-id="@item.Id" title="Approve" onclick="action('approve', @item.Id)">
                        <span class="glyphicon glyphicon-lock" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
        }
    </tbody>

</table>
