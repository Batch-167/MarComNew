@model MarCom.ViewModel.DesignItemViewModel

<tr>
    <td>
        @Html.DropDownListFor(model => model.M_Product_Id,(IEnumerable<SelectListItem>)ViewBag.Product, "-Select Souvenir-", new { @class = "form-control", @disabled = "true" })
        @Html.ValidationMessageFor(model => model.M_Product_Id, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.DropDownListFor(model => model.Description, (IEnumerable<SelectListItem>)ViewBag.Description, "-Select Description-", new { @class = "form-control", @disabled = "true" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.EditorFor(model => model.Title_Item, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
        @Html.ValidationMessageFor(model => model.Title_Item, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.EditorFor(model => model.Request_Pic,  new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
        @Html.ValidationMessageFor(model => model.Request_Pic, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.EditorFor(model => model.Request_Due_Date,  new { htmlAttributes = new { @class = "form-control datepicker", @type = "date", @disabled = "true" } })
        @Html.ValidationMessageFor(model => model.Request_Due_Date, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date" , @readonly="readonly", @disabled = "true" } })
        @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date" , @readonly = "readonly", @disabled = "true" } })
        @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
    </td>

    <td>
        @Html.EditorFor(model => model.Note,  new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
    </td>

    <td>
        <button type="button" class="btn btn-edit" title="Edit" onclick="Disable(this)"><span class="glyphicon glyphicon-edit" aria-hidden="true"></span></button>
        <button type="button" class="btn btn-delete" title="Delete" onclick="RemoveRow(this)"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button>
    </td>
</tr>
       

       