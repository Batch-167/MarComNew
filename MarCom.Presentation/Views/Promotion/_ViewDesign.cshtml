@model MarCom.ViewModel.DesignRequestViewModel


@using (Html.BeginForm("ViewDesign", "Promotion", FormMethod.Get, new { @id = "input-form" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">
        <div class="row">
            <h5><span style="font-family:Arial;color:goldenrod"><b>DESSIGN HEADER INFROMATION - @Model.Code </b></span></h5>
            <hr />

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Code, "Design Code", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title_Header, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Title_Header, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Title_Header, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NameRequest,"Request By", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.NameRequest, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.NameRequest, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Request_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Request_Date, new { htmlAttributes = new { @Value = Model.Request_Date.ToString("dd-MM-yyyy"), @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Request_Date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Note, new { htmlAttributes = new {@readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>


}


