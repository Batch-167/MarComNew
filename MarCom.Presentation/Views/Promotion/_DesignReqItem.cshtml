@model IEnumerable<MarCom.ViewModel.PromotionItemViewModel>
@foreach (var item in Model){
<tr>
    <td>
        @Html.HiddenFor(model=>item.M_Product_Id, new { @Id = "M_Product_Id" })

        @Html.EditorFor(model => item.ProductName, new { htmlAttributes = new { @class = "form-control", @readonly="readonly"} })
        @Html.ValidationMessageFor(model => item.ProductName, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.ProductDescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
        @Html.ValidationMessageFor(model => item.ProductDescription, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Id="Title" } })
        @Html.ValidationMessageFor(model => item.Title, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.Qty, new { htmlAttributes = new { @class = "form-control", @Id="Qty" } })
        @Html.ValidationMessageFor(model => item.Qty, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.Todo, new { htmlAttributes = new { @class = "form-control", @Id="Todo" } })
        @Html.ValidationMessageFor(model => item.Todo, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.Request_Due_Date, new { htmlAttributes = new { @class = "form-control", @type="date", @Id= "Request_Due_Date" } })
        @Html.ValidationMessageFor(model => item.Request_Due_Date, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.Start_Date, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
        @Html.ValidationMessageFor(model => item.Start_Date, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.End_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => item.End_Date, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.EditorFor(model => item.Note, new { htmlAttributes = new { @class = "form-control", @Id= "Note" } })
        @Html.ValidationMessageFor(model => item.Note, "", new { @class = "text-danger" })
    </td>
    <td>
        <button type="button" class="btn btn-upload glyphicon glyphicon-upload btn-success"></button>   
    </td>
</tr>
}